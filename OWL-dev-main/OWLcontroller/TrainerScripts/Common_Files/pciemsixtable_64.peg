; Disable MSI
/*
packet = TLP {
	TLPType=CfgWr0
	Length=1
    ;Tag = 6
	FirstDwBe=0xF
	Register=PCIE_CFGS_MSICAP_REG_ADDR
	Payload=(PCIE_CFGS_MSICAP_REG_VAL)
}

wait =TLP 
{
    TLPType=Cpl
}

packet = TLP {
	TLPType = CfgRd0
	Length=1
    ;Tag = 7
	FirstDwBe=0xF
	Register=PCIE_CFGS_MSICAP_REG_ADDR
}

wait =TLP 
{
    TLPType=CplD
}
*/

; Read MSI-X Table offset location
packet = TLP {
	TLPType = CfgRd0
	Length=1
    ;Tag = 0
	FirstDwBe=0x0F
	Register=(MSI_X_CAPABILITY_ADDRESS+0x04)
}

wait =TLP 
{
    TLPType=CplD
}

; Set MSI-X by Table Size
packet=TLP {    
	TLPType=CfgWr0
	Length=1
    FirstDwBe = 0x0C
    Register = MSI_X_CAPABILITY_ADDRESS    
    Payload = (0x11001000)
}

wait=TLP
{
    TLPType = Cpl
}

; fill MSIX-table with the follwoing field : 
Repeat=Begin 
{
    Count=MSIX_VECTORS_NUM
    Counter = MsiXVectCntr
}

; All the platforms we see do a zig-zag Read / Write of MSI-X
; We emulate the same pattern

; READ MSI-X Entry
; Vector 0
/*
Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    Address = ( MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE) )
}

Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    Address = (  (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0x4 )
}


Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    Address = ( (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0x8 )
}

Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    Address = ( (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0xC )
}
*/

; WRITE MSI-X Entry
; Vector 0
Packet=TLP 
{
    TLPType=MWr64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = ( MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE) )
    Payload = 0x0C10E0FE
    ;Payload = ( [MSIX_HOST_BASE_ADDR_BE | (((MsiXVectCntr * 0x10) & 0xff) << 24) | (((MsiXVectCntr * 0x10) & 0xff00) << 8) | (((MsiXVectCntr * 0x10) & 0xff0000) >> 8) | (((MsiXVectCntr * 0x10) & 0xff000000) >> 24)])   
}

Packet=TLP 
{
    TLPType=MWr64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = (  (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0x4 )
    Payload = ( 0 )   
}


Packet=TLP 
{
    TLPType=MWr64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = ( (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0x8 )
    Payload = Random   
    ;Payload = ([MSIX_MSG_BASE_BE  | ((MsiXVectCntr & 0xff) << 24)  | ((MsiXVectCntr & 0xff00) << 8)  | ((MsiXVectCntr & 0xff0000) >> 8)  | ((MsiXVectCntr & 0xff000000) >> 24)])
}

Packet=TLP 
{
    TLPType=MWr64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = ( (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0xC )
    Payload = ( 0 )   
}

Repeat=End

; Enable MSI-X by writing Message Control in MSI-X capability structure
packet=TLP {    
	TLPType=CfgWr0
	Length=1
    FirstDwBe = 0x0C
    Register = MSI_X_CAPABILITY_ADDRESS    
    ;Payload = ( 0x801F0080 )
    Payload=(0x00001080)
}

wait=TLP
{
    TLPType = Cpl
}

; Read MSI-X Entry
Repeat=Begin 
{
    Count=MSIX_VECTORS_NUM
    Counter = MsiXVectCntr
}

; All the platforms we see do a zig-zag Read / Write of MSI-X
; We emulate the same pattern

; READ MSI-X Entry
; Vector 0
Packet=TLP 
{
    TLPType = MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff
    AddressLo = ( MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE) )
    ;Address = ( MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE) )
}

Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = (  (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0x4 )
}


Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = ( (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0x8 )
}

Packet=TLP 
{
    TLPType=MRd64
    Length = 1
    LastDwBe = 0x0
    FirstDwBe = 0xF
    AddressHi = 0xffffffff 
    AddressLo = ( (MSIX_DEVICE_BASE_ADDR + (MsiXVectCntr * MSIX_VECTOR_SIZE)) + 0xC )
}

Repeat=End